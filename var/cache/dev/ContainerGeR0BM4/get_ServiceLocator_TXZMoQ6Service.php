<?php

namespace ContainerGeR0BM4;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_TXZMoQ6Service extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.tXZMoQ6' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.tXZMoQ6'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'leadService' => ['privates', '.errored.fisQPce', NULL, 'Cannot determine controller argument for "App\\Controller\\DashboardController::index()": the $leadService argument is type-hinted with the non-existent class or interface: "App\\Service\\LeadService".'],
            'proposalRepository' => ['privates', 'App\\Repository\\ProposalRepository', 'getProposalRepositoryService', true],
            'requestRepository' => ['privates', 'App\\Repository\\RequestRepository', 'getRequestRepositoryService', true],
            'sponsorshipRepository' => ['privates', 'App\\Repository\\SponsorshipRepository', 'getSponsorshipRepositoryService', true],
            'studentRepository' => ['privates', 'App\\Repository\\StudentRepository', 'getStudentRepositoryService', true],
        ], [
            'leadService' => '?',
            'proposalRepository' => 'App\\Repository\\ProposalRepository',
            'requestRepository' => 'App\\Repository\\RequestRepository',
            'sponsorshipRepository' => 'App\\Repository\\SponsorshipRepository',
            'studentRepository' => 'App\\Repository\\StudentRepository',
        ]);
    }
}
